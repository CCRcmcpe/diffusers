import argparse

parser = argparse.ArgumentParser(
    description="(Not so) simple example of a training script."
)
parser.add_argument(
    "--config",
    type=str,
    default=None,
    help="Path to the training config file."
)
parser.add_argument(
    "--pretrained_model_name_or_path",
    type=str,
    required=True,
    help="Path to pretrained model or model identifier from huggingface.co/models."
)
parser.add_argument(
    "--pretrained_vae_name_or_path",
    type=str,
    default=None,
    help="Path to pretrained vae or vae identifier from huggingface.co/models."
)
parser.add_argument(
    "--tokenizer_name",
    type=str,
    default=None,
    help="Pretrained tokenizer name or path if not the same as model_name"
)
parser.add_argument(
    "--train_n_steps",
    type=int,
    default=None,
    help="Number of training steps to perform in this run. If provided, overrides train_to_epochs."
)
parser.add_argument(
    "--train_to_epochs",
    type=int,
    default=30,
    help="Run to N epochs, includes previously trained (if any)."
)
parser.add_argument(
    "--output_dir",
    type=str,
    default="output",
    help="The output directory."
)
parser.add_argument(
    "--project",
    type=str,
    default="SD-Dreambooth-HF",
    help="Project of this run."
)
parser.add_argument(
    "--run_id",
    type=str,
    default=None,
    help="Id of this run, random generated by default. Checkpoint will be saved at <output dir>/<run id>/<step>"
)
parser.add_argument(
    "--local_rank",
    type=int,
    default=-1,
    help="For distributed training: local_rank"
)
parser.add_argument(
    "--resume",
    default=False,
    action="store_true",
    help="Resume training from specified checkpoint (--pretrained_model_name_or_path)."
)
